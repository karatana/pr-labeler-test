name: PR Labeler
on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read

jobs:
  pr-labeler:
    permissions:
      contents: read # for TimonVS/pr-labeler-action to read config file
      pull-requests: write # for TimonVS/pr-labeler-action to add labels in PR
    runs-on: ubuntu-latest
    steps:
      - uses: TimonVS/pr-labeler-action@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/pr-labeler.yml # optional, .github/pr-labeler.yml is the default value
      - uses: actions/github-script@v6
        with:
          script: |
            const p = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            console.log('---------------------------------------');
            const basehead = p.data.base.sha + '...' + p.data.head.sha;
            console.log('headbase: ', basehead);
            const commits_response = await github.rest.repos.compareCommitsWithBasehead({
              owner: context.repo.owner,
              repo: context.repo.repo,
              basehead: basehead
            });
            console.log('---------------------------------------');
            console.log('commits length: ', commits_response.data.commits.length);
            const commits = commits_response.data.commits;
            const pull_requests = [];
            await commits.forEach(async (commit) => {
              const pull_response = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: commit.sha,
              });
              console.log('---------------------------------------');
              console.log(pull_response.data)
            });
